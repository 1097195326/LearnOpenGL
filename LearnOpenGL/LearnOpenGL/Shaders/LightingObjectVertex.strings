#version 330 core

//attribute   vec3    ObjectPosition;
//attribute   vec3    ObjectNormal;
//attribute   vec3    ObjectColor;
//attribute   vec2    ObjectUVPos;

layout (location = 1) in   vec3    ObjectPosition;
layout (location = 2) in   vec3    ObjectNormal;
layout (location = 3) in    vec3    ObjectColor;
layout (location = 4) in    vec2    ObjectUVPos;

uniform     mat4    model;
uniform     mat4    view;
uniform     mat4    projection;

uniform     vec3    LightPosition;

//-------- out for fragment ----------
out     vec2    FragUVPosition;
out     vec3    vertexColor;

out     vec3    FragPosition;
out     vec3    FragNormal;
out     vec3    FragLightPosition;

void main()
{
    gl_Position = projection * view * model * vec4(ObjectPosition, 1.0);
//        gl_Position = vec4(ObjectPosition, 1.0);
    FragUVPosition = ObjectUVPos;
    vertexColor = ObjectColor;
    
    FragPosition = vec3(view * model * vec4(ObjectPosition, 1.0));
    FragNormal = mat3(transpose(inverse(view * model))) * ObjectNormal;
    FragLightPosition = vec3(view * vec4(LightPosition,1.0));

}
