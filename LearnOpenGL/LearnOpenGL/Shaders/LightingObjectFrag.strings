#version 330 core

in     vec2    FragUVPosition;
in     vec3    vertexColor;


in     vec3    FragNormal;
in     vec3    FragPosition;
in     vec3    FragLightPosition;


//uniform     sampler2D texture1;
//uniform     sampler2D texture2;

uniform     vec3    LightColor;
uniform     vec3    ObjectUniformColor;

out     vec4    FragColor;

void main ()
{
    //ambient
    float ambientStrength = 0.2;
    vec3 ambient = ambientStrength * LightColor;

    vec3 norm = normalize(FragNormal);
    vec3 lightDir = normalize(FragLightPosition - FragPosition);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * LightColor;

    vec3 ResultColor = (ambient + diffuse) * ObjectUniformColor;
    FragColor = vec4(ResultColor,1.f);
    
    
//    gl_FragColor = texture2D(texture1,outCooPos);
//    gl_FragColor = mix(texture2D(texture1,outCooPos),texture2D(texture2,outCooPos),0.8);
}
